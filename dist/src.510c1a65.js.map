{"version":3,"sources":["index.js"],"names":["form","document","getElementById","userName","userSurname","email","password","addEventListener","e","preventDefault","validateFormInputs","setError","element","message","parentElement","querySelector","innerText","classList","add","remove","ev","setSuccess","isValidEmail","test","String","toLowerCase","userNameValue","value","trim","userSurnameValue","emailValue","passwordValue","length"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,eAAe,QAC/BC,EAAWF,SAASC,eAAe,aACnCE,EAAcH,SAASC,eAAe,gBACtCG,EAAQJ,SAASC,eAAe,cAChCI,EAAWL,SAASC,eAAe,iBAEzCF,EAAKO,iBAAiB,SAAU,SAAAC,GAE5BA,EAAEC,iBAEFC,MAGJ,IAAMC,EAAW,SAACC,EAASC,GACFD,EAAQE,cACKC,cAAc,UAEnCC,UAAYH,EACzBD,EAAQK,UAAUC,IAAI,WACtBN,EAAQK,UAAUE,OAAO,WAEzBP,EAAQL,iBAAiB,QAAS,SAAAa,GAC9BA,EAAGX,iBACHY,EAAWT,MAIbS,EAAa,SAAAT,GACMA,EAAQE,cACKC,cAAc,UAEnCC,UAAY,GACzBJ,EAAQK,UAAUE,OAAO,WACzBP,EAAQK,UAAUC,IAAI,YAGpBI,EAAe,SAAAjB,GAEjB,MADY,yJACDkB,KAAKC,OAAOnB,GAAOoB,gBAG5Bf,EAAqB,WACvB,IAAMgB,EAAgBvB,EAASwB,MAAMC,OAC/BC,EAAmBzB,EAAYuB,MAAMC,OACrCE,EAAazB,EAAMsB,MAAMC,OACzBG,EAAgBzB,EAASqB,MAAMC,OAEf,KAAlBF,EACAf,EAASR,EAAU,wBAEnBkB,EAAWlB,GAGU,KAArB0B,EACAlB,EAASP,EAAa,uBAEtBiB,EAAWjB,GAGI,KAAf0B,EACAnB,EAASN,EAAO,qBACRiB,EAAaQ,GAGrBT,EAAWhB,GAFXM,EAASN,EAAO,kCAKC,KAAlB0B,EACCpB,EAASL,EAAU,yBACZyB,EAAcC,OAAS,EAC9BrB,EAASL,EAAU,2CAEnBe,EAAWf","file":"src.510c1a65.js","sourceRoot":"..\\src","sourcesContent":["const form = document.getElementById('form');\nconst userName = document.getElementById('nameField');\nconst userSurname = document.getElementById('surnameField');\nconst email = document.getElementById('emailField');\nconst password = document.getElementById('passwordField');\n\nform.addEventListener('submit', e => {\n\n    e.preventDefault();\n\n    validateFormInputs();\n});\n\nconst setError = (element, message) => {\n    const inputControl = element.parentElement;\n    const errorElement = inputControl.querySelector('.error');\n\n    errorElement.innerText = message;\n    element.classList.add('errored');\n    element.classList.remove('success');\n\n    element.addEventListener('input', ev => {\n        ev.preventDefault();\n        setSuccess(element);\n    })\n};\n\nconst setSuccess = element => {\n    const inputControl = element.parentElement;\n    const errorElement = inputControl.querySelector('.error');\n\n    errorElement.innerText = '';\n    element.classList.remove('errored');\n    element.classList.add('success');\n};\n\nconst isValidEmail = email => {\n    const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return reg.test(String(email).toLowerCase());\n};\n\nconst validateFormInputs = () => {\n    const userNameValue = userName.value.trim();\n    const userSurnameValue = userSurname.value.trim();\n    const emailValue = email.value.trim();\n    const passwordValue = password.value.trim();\n\n    if (userNameValue === '') {\n        setError(userName, 'Username is required');\n    } else {\n        setSuccess(userName);\n    }\n\n    if (userSurnameValue === '') {\n        setError(userSurname, 'Surname is required');\n    } else {\n        setSuccess(userSurname);\n    }\n\n    if (emailValue === '') {\n        setError(email, 'Email is required');\n    } else if (!isValidEmail(emailValue)) {\n        setError(email, 'Provide a valid email address!');\n    } else {\n        setSuccess(email);\n    }\n\n    if(passwordValue === '') {\n        setError(password, 'Password is required!');\n    } else if (passwordValue.length < 8) {\n        setError(password, 'Password must be at least 8 characters!');\n    } else {\n        setSuccess(password);\n    }\n};\n"]}